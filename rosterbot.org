#+title: RosterBot
#+author: Elliott "Seylerius" Seyler

RosterBot is a tool for automatically generating duty rosters for teams. Operating on [[https://en.wikipedia.org/wiki/Constraint_programming][Constraint Programming]], the software narrows the pool of schedules based on the specified restrictions, then iterates through them to find an optimal selection.

Built in Clojure, RosterBot is released under the GPL3. The following libraries are used by RosterBot:

+ [[https://github.com/aengelberg/loco][aengelberg/loco]] :: Constraint Programming
+ [[https://github.com/yogthos/clj-pdf][yogthos/clj-pdf]] :: PDF generation
+ [[https://github.com/SparkFund/google-apps-clj][SparkFund/google-apps-clj]] :: Google Calendar sync
+ [[https://github.com/clj-time/clj-time][clj-time]] :: Date/time library

* Workspace

#+BEGIN_SRC emacs-lisp

  (clj-workspace (concat "~/src/freelance/marco-peters/rosterbot"
                         "/src/com/seriouslyseylerius/rosterbot.clj")
                 "~/src/freelance/marco-peters/rosterbot/project.clj")

#+END_SRC

#+RESULTS:
: #<process nrepl-server>

* TODO [#A] Core Logic

** TODO [#A] Base Constraint Model

Constraint programming operates on a model of bounded variables which are reduced and restricted until a solution is found that meets all constraints. Constraints are defined in terms of variables.

*** DONE [#A] Model timespan with each day's shifts
CLOSED: [2016-12-10 Sat 00:56]

The most flexible option seems to be generating an ~employee-day~ matrix, by iterating through the date range, then iterating through the employee list. I'll map each assignment-state to a number: 

+ Assigned elsewhere :: ~-2~
+ Requested time off :: ~-1~
+ Unassigned :: ~0~
+ Shifts :: ~1â€“N~

*** DONE [#A] Model shift recurrence
CLOSED: [2016-12-10 Sat 01:00]

Shift restrictions will be added as constraints as the ~employee-day~ variables are generated. Shifts will have schedule options as follows:

+ Every ~X~ days
+ Specified days-of-week every ~X~ weeks

Shift exceptions can be specified as dates and date ranges, causing the modified shift to not be generated for those dates.

*** TODO [#A] Model shift restrictions

**** DONE [#A] Consecutive shifts
CLOSED: [2016-12-10 Sat 01:03]

The specified shift must be held by the same person, ~X~ days in a row.

**** DONE [#A] Subsequent shifts
CLOSED: [2016-12-10 Sat 02:04]

The specified shift must be followed by one of the following, ~X~ times:

+ Off-time
+ Specified shift(s)
+ Any other shift
+ Any outside activity (off-time or outside assignments)

*** TODO [#A] Constrain employees by other obligations and personal requests

*** TODO [#A] Model balanced shift distribution

* TODO [#A] Data I/O

** TODO [#A] Store Definitions Locally

** TODO [#A] Sync Employee Availability

** TODO [#A] Sync Produced Roster

* TODO [#A] Graphical User Interface

** TODO [#A] Shift Definition Screen

** TODO [#A] Employee Definition Screen

*** TODO [#A] Employee Availability Screen

** TODO [#A] Generated Roster View

*** TODO [#A] Enable Roster Modification
